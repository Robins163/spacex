import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';
import {useGetAllDataQuery} from "./pageAPI";

const initialState = {
    data: [],
    status: 'idle'
};

export const fetchData = createAsyncThunk(
    'page/rockets',
    async () => {
        const response = await useGetAllDataQuery();
        return response.data;
    }
);

export const pageSlice = createSlice({
    name: 'page',
    initialState,
    // The `reducers` field lets us define reducers and generate associated actions
    reducers: {

    },
    // The `extraReducers` field lets the slice handle actions defined elsewhere,
    // including actions generated by createAsyncThunk or in other slices.
    extraReducers: (builder) => {
        builder
            .addCase(fetchData.pending, (state) => {
                console.log(state.status)
                state.status = 'loading';
            })
            .addCase(fetchData.rejected, (state, config) => {
                console.log('rejected')
                console.log(state)
                console.log(config)
                state.status = 'loading';
            })
            .addCase(fetchData.fulfilled, (state, action) => {
                console.log(state.status)
                console.log('action', action)
                state.status = 'idle';
                console.log(action)
                state.data = action.payload;
            });
    },
});

export const { } = pageSlice.actions;

export const selectData = (state) => state.page.data;

export default pageSlice.reducer;


